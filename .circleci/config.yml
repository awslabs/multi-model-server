version: 2.1


executors:
  docker-python-3:
    docker:
      - image: prashantsail/mms-build:latest
    environment:
      _JAVA_OPTIONS: "-Xmx2048m"


commands:
  attach-mms-workspace:
    description: "Attach the MMS directory which was saved into workspace"
    steps:
      - attach_workspace:
          at: .

  install-mms-server:
    description: "Install MMS server from a wheel"
    steps:
      - run:
          name: Install MMS
          command: pip install dist/*.whl

  exeucute-api-tests:
    description: "Execute API tests from a collection"
    parameters:
      collection:
        type: enum
        enum: [management, inference, https]
        default: management
    steps:
      - run:
          name: Start MMS, Execute << parameters.collection >> API Tests, Stop MMS
          command: .circleci/scripts/linux_test_api.sh << parameters.collection >>
      - store_artifacts:
          name: Store server logs from << parameters.collection >> API tests
          path: mms_<< parameters.collection >>.log
      - store_artifacts:
          name: Store << parameters.collection >> API test results
          path: test/<< parameters.collection >>-api-report.html


jobs:
    build:
      executor: docker-python-3
      steps:
        - checkout
        - run:
            name: Build frontend
            command: .circleci/scripts/linux_build.sh
        - run:
            name: Optimize before moving to workspace
            command: rm -rf .git  # Save disk space & time required for copy to\from workspace
        - store_artifacts:
            name: Store gradle testng results
            path: frontend/server/build/reports/tests/test
        - persist_to_workspace:
            root: .
            paths:
              - .

    python_tests:
      executor: docker-python-3
      steps:
        - attach-mms-workspace
        - run:
            name: Execute python unit tests
            command: .circleci/scripts/linux_test_python.sh
        - store_artifacts:
            name: Store python Test results
            path: htmlcov

    api_tests:
      executor: docker-python-3
      steps:
        - attach-mms-workspace
        - install-mms-server
        - exeucute-api-tests:
            collection: management
        - exeucute-api-tests:
            collection: inference
        - exeucute-api-tests:
            collection: https

    benchmark:
      executor: docker-python-3
      steps:
        - attach-mms-workspace
        - install-mms-server
        - run:
            name: Start MMS, Execute benchmark tests, Stop MMS
            command: .circleci/scripts/linux_test_benchmark.sh
        - store_artifacts:
            name: Store server logs from benchmark tests
            path: mms.log
        - store_artifacts:
            name: Store Benchmark Latency resnet-18 results
            path: /tmp/MMSBenchmark/out/latency/resnet-18/report/
            destination: benchmark-latency-resnet-18

    taurus:
      executor: docker-python-3
      steps:
        - attach-mms-workspace
        - install-mms-server
        - run:
            name: Install Taurus
            command: pip install bzt
        - run:
            name: Start MMS, Execute Taurus testcases, Stop MMS
            command: .circleci/scripts/linux_test_taurus.sh
        - store_artifacts:
            name: Store server logs from Taurus tests
            path: mms.log
        - store_artifacts:
            name: Store Taurus results
            path: /tmp/cci-taurus/
            destination: taurus-results


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - python_tests:
          requires:
            - build
      - api_tests:
          requires:
            - build
      - benchmark:
          requires:
            - build
      - taurus:
          requires:
            - build