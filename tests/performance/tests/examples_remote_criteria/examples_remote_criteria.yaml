
~execution:
- concurrency: 4
  ramp-up: 1s
  hold-for: 20s
  scenario: Inference

~scenarios:
  Inference:
    script: examples_remote_criteria.jmx

~services:
  - module: shellexec
    prepare:
      - "curl -s -O ${INPUT_IMG_URL}"
      - "mkdir -p /tmp/ts_model_store"
      - "ps aux | grep '${SERVER_PROCESS_NAME}' | awk '{print $2}' | xargs kill -9 2> /dev/null || true"
      - "${SERVER_START_CMD} --model-store /tmp/ts_model_store > /dev/null 2>&1"
      - "sleep 20s"
    post-process:
      - "${SERVER_STOP_CMD} > /dev/null 2>&1"
      - "rm ${INPUT_IMG_PATH}"
      - "rm -r /tmp/ts_model_store"
      - "mv logs ${ARTIFACTS_DIR}/model_server_logs"

  - module: server_monitoring
    ServerRemoteClient:
      - address: localhost:9009 # metric monitoring service address
        label: model-server  # if you specify label, it will be used in reports instead of ip:port
        interval: 1s    # polling interval
        logging: True # those logs will be saved to "SAlogs_192.168.0.1_9009.csv" in the artifacts dir
        metrics: # metrics should be supported by monitoring service
          - sum_workers_cpu_percent # cpu percent used by all the Model Server server processes and workers
          - sum_workers_memory_percent
          - sum_workers_file_descriptors
          - total_workers # no of Model Server workers


~reporting:
- module: passfail # this is to enable passfail module
- module: junit-xml
  data-source: pass-fail
- module: junit-xml
  data-source: sample-labels
- module: final-stats
  dump-csv : ${ARTIFACTS_DIR}/final_stats.csv
- module: passfail
  criteria:
  - fail >${FAIL}, stop as failed
  - p90  >${P90}  , stop as failed
  - avg-rt >${AVG_RT} , stop as failed
  - class: bzt.modules.monitoring.MonitoringCriteria
    subject: model-server/sum_workers_file_descriptors
    condition: '>'
    threshold: ${TOTAL_WORKERS_FDS}
    timeframe: 1s
    fail: true
    stop: true
    diff_percent_previous : ${TOTAL_WORKERS_FDS_DIFF}

