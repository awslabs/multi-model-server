---
~execution:
- concurrency: 1
  ramp-up: 5s
  hold-for: 20s
  scenario: Inference

~scenarios:
  Inference:
    script: examples_local_monitoring.jmx

modules:
  server_local_monitoring:
    # metrics_monitoring_inproc and dependencies should be in python path
    class : metrics_monitoring_inproc.Monitor # monitoring class.

~services:
  - module: shellexec
    prepare:
      - "curl -s -O $INPUT_IMG_URL"
      - "mkdir /tmp/ts_model_store"
      - "ps aux | grep '$SERVER_PROCESS_NAME' | awk '{print $2}' | xargs kill -9 2> /dev/null || true"
      - "$SERVER_CMD --start --ncs --model-store /tmp/ts_model_store > /dev/null 2>&1"
      - "sleep 20s"
    post-process:
      - "$SERVER_CMD --stop > /dev/null 2>&1"
      - "rm $INPUT_IMG_PATH"
      - "rm -r /tmp/ts_model_store"
      - "mv logs ${ARTIFACTS_DIR}/model_server_logs"

    env:
      SERVER_CMD : ${SERVER_CMD}
      ARTIFACTS_DIR : ${ARTIFACTS_DIR}
      SERVER_PROCESS_NAME : ${SERVER_PROCESS_NAME}
      INPUT_IMG_URL : ${INPUT_IMG_URL}
      INPUT_IMG_PATH : ${INPUT_IMG_PATH}

      RESNET_152_BATCH_URL: ${RESNET_152_BATCH_URL}
      RESNET_152_BATCH_NAME: ${RESNET_152_BATCH_NAME}
      SQZNET_URL: ${SQZNET_URL}
      SQZNET_NAME: ${SQZNET_NAME}
      RESNET_URL: ${RESNET_URL}
      RESNET_NAME: ${RESNET_NAME}

  - module: server_local_monitoring # should be added in modules section
    ServerLocalClient: # keyword from metrics_monitoring_inproc.Monitor
      - interval: 1s
        metrics:
          - cpu
          - disk-space
          - mem
          - sum_workers_memory_percent

~reporting:
  - module: passfail

~compare_criteria:
  -
